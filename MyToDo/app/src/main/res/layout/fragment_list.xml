<?xml version="1.0" encoding="utf-8"?>

<layout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools">

    <data>

        <variable
            name="mShareViewModel"
            type="com.example.mytodo.fragments.ShareViewModel" />

    </data>

    <androidx.constraintlayout.widget.ConstraintLayout
        android:id="@+id/listlayout"
        android:layout_width="match_parent"
        android:layout_height="match_parent"

        tools:context=".fragments.list.ListFragment">

<!--
ListView的局限

只有纵向列表一种布局
没有支持动画的API
接口设计和系统不一致
setOnItemClickListener()
setOnItemLongClickListener()
setSelection()


没有强制实现ViewHolder
性能不如RecyclerView
使用RecyclerView的优势

默认支持Linear, Grid, Staggered Grid三种布局
友好的ItemAnimator动画API
强制实现ViewHolder
解耦架构设计
相比 ListView更好的性能
RecyclerView支持的布局
-->
        <androidx.recyclerview.widget.RecyclerView
            android:id="@+id/recyclerView"
            android:layout_width="0dp"
            android:layout_height="0dp"
            android:paddingTop="8dp"
            android:clipToPadding="false"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintHorizontal_bias="0.0"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toTopOf="parent" />

        <ImageView
            android:id="@+id/no_data_imageView"
            android:layout_width="100dp"
            android:layout_height="100dp"
            android:src="@drawable/ic_no_data"
            android:visibility="invisible"
            android:emptyDatabase="@{mShareViewModel.emptydata}"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintEnd_toEndOf="@+id/recyclerView"
            app:layout_constraintStart_toStartOf="@+id/recyclerView"
            app:layout_constraintTop_toTopOf="@+id/recyclerView"
            app:layout_constraintVertical_bias="0.37" />

        <TextView
            android:id="@+id/no_data_textView"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginTop="12dp"
            android:text="@string/no_data"
            android:visibility="invisible"
            android:emptyDatabase="@{mShareViewModel.emptydata}"
            android:textSize="16sp"
            android:alpha="0.5"
            app:layout_constraintEnd_toEndOf="@+id/recyclerView"
            app:layout_constraintStart_toStartOf="@+id/recyclerView"
            app:layout_constraintTop_toBottomOf="@+id/no_data_imageView" />

        <com.google.android.material.floatingactionbutton.FloatingActionButton
            android:id="@+id/floatingActionButton"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginEnd="24dp"
            android:layout_marginBottom="24dp"
            android:navigateToAddFragment="@{true}"

            android:clickable="true"
            android:focusable="true"
            android:src="@drawable/ic_no_add"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintEnd_toEndOf="parent"
            app:tint="@color/white" />

        <Button
            android:id="@+id/button"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginStart="24dp"
            android:layout_marginBottom="24dp"
            android:clickable="true"
            android:focusable="false"

            android:text="Button"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintStart_toStartOf="parent" />
    </androidx.constraintlayout.widget.ConstraintLayout>
</layout>